#!/usr/bin/env bash
#
# Created:         Di 2020-05-05 19:31:11 CEST
# Last Modified:   So 2020-06-28 23:00:29 CEST
#
# backslide:
#   This script will change the current desktop wallpaper.

# Help text
usage() {
cat << EOF

Usage: backslide [options] <folder>

This script will change the current desktop wallpaper with
a random selection from the given folder.

OPTIONS:
   -d 'string'  Force desktop environment [GNOME|MATE|XFCE]
   -r           Recurse into subdirectories
   -n           Random selection
   -h           Show this message
EOF
}

# Initialization
DESKTOP=
RND=0
MAXDEPTH='-maxdepth 1'

# Process options
while getopts d:nrh OPTION
do
    case "${OPTION}"
    in
        d)  DESKTOP=${OPTARG}
            ;;
        n)  RND=1
            ;;
        r)  MAXDEPTH=
            ;;
        h)  usage
            exit 0
            ;;
        \?) usage
            exit 1
            ;;
    esac
done

# Skip options and shift index
shift $((OPTIND-1))

# Initialize list
LIST=()

# Loop over arguments
for dir in "$@"
do
    # Check if current argument is valid directory
    if [ ! -d "${dir}" ]
    then
        echo "Skipping ${dir}, not a valid directory"
        continue
    fi

    # Search for JPG and PNG image files (bash v4.3 and earlier)
    while IFS=  read -r -d $'\0'; do
        LIST+=("$REPLY")
    done < <( find "${dir}" "${MAXDEPTH}" -type f \( -iname \*.jpg -o \
                                                   -iname \*.png \) -print0 )

    # Search for JPG and PNG image files (bash v4.4 and later)
    #readarray -d '' LIST < <( find ${dir} $MAXDEPTH -type f \( -iname \*.jpg -o \
    #                                                           -iname \*.png \) -print0 )

done

# Compute the number of images
COUNT=${#LIST[@]}

# Exit if there are no images
if [[ ${COUNT} -eq 0 ]]
then
    echo "No images found"
    exit 2
fi

# Make selection (arg #1 is filepath to current wallpaper)
function make_selection {

    # Determine ID of current wallpaper
    CURSEL=-1
    for i in "${!LIST[@]}"
    do
        if [[ "${LIST[$i]}" == "$1" ]]
        then
            CURSEL=$i
            break
        fi
    done

    # Initialize new ID
    TRYSEL=$CURSEL

    # Loop until new ID is found
    if [ "${RND}" -eq 0 ]
    then

        # Increment counter
        TRYSEL=$(( TRYSEL + 1 ))
        [[ $TRYSEL -eq ${COUNT} ]] && TRYSEL=0

    # Random select if more than 1 item in list
    elif [ "${COUNT}" -gt 1 ]
    then

        #Loop until new ID is found
        while [ ${TRYSEL} -eq "${CURSEL}" ]
        do
            TRYSEL=$(( RANDOM % COUNT ))
        done
    fi
}

# Set DBUS session (arg #1 is name of desktop session)
function set_dbus_session {

    # Argument #1 is name of session to look for
    PID=$(pgrep "$1" -u $UID | tail -n1)
    DBUS_SESSION_BUS_ADDRESS=$(grep -z DBUS_SESSION_BUS_ADDRESS /proc/"$PID"/environ | tr -d '\0' | cut -d= -f2-)
    export DBUS_SESSION_BUS_ADDRESS

}

# Check if variable DESKTOP is empty
if [ -z "${DESKTOP}" ]
then

    # Check variable XDG_CURRENT_DESKTOP
    if [ "${XDG_CURRENT_DESKTOP}" == 'GNOME' ]
    then

        # Looks like Gnome
        DESKTOP='GNOME'

    elif [ "${XDG_CURRENT_DESKTOP}" == 'MATE' ]
    then

        # Looks like Mate
        DESKTOP='MATE'

    elif [ "${XDG_CURRENT_DESKTOP}" == 'XFCE' ]
    then

        # Looks like XFCE
        DESKTOP='XFCE'

    else

        # Issue error message and display debugging info
        echo "Failed to automatically determine desktop environment"
        echo
		echo "XDG_CURRENT_DESKTOP = '${XDG_CURRENT_DESKTOP}'"
        echo "DESKTOP_SERSSION = '${DESKTOP_SESSION}'"
        echo "MENU_PREFIX = '${XDG_MENU_PREFIX}'"

        exit 3
    fi
fi

# Check current desktop environment
if [ "${DESKTOP}" == 'GNOME' ]
then

    # Fetch current wallpaper
    CURRENT=$(gsettings get org.gnome.desktop.background picture-uri)
    CURRENT=${CURRENT#"'file://"}
    CURRENT=${CURRENT%"'"}

    # Set new index
    make_selection "${CURRENT}"

    # Set DBUS session
    set_dbus_session gnome-session

    # Image loading
    gsettings set org.gnome.desktop.background picture-uri "file://${LIST[${TRYSEL}]}"

elif [ "${DESKTOP}" == 'MATE' ]
then

    # Fetch current wallpaper
    CURRENT=$(gsettings get org.mate.background picture-filename)

    # Select new index
    make_selection "${CURRENT}"

    # Set DBUS session
    set_dbus_session mate-session

    # Image loading
    gsettings set org.mate.background picture-filename "${LIST[${TRYSEL}]}"

elif [ "${DESKTOP}" == 'XFCE' ]
then

    # Fetch current wallpaper
    CURRENT=$(xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorLVDS/workspace0/last-image)

    # Select new index
    make_selection "${CURRENT}"

    # Set DBUS session
    set_dbus_session xfce4-session

    # Image loading
    xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorLVDS/workspace0/last-image -s "${LIST[${TRYSEL}]}"

fi
